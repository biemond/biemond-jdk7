# jdk7::instal7
#
# On Linux low entropy can cause certain operations to be very slow.
# Encryption operations need entropy to ensure randomness. Entropy is
# generated by the OS when you use the keyboard, the mouse or the disk.
#
# If an encryption operation is missing entropy it will wait until
# enough is generated.
#
# three options
#  use rngd service (this class)
#  set java.security in JDK ( jre/lib/security )
#  set -Djava.security.egd=file:/dev/./urandom param
#
define jdk7::install7(
  $version         =  '7u25',
  $fullVersion     =  'jdk1.7.0_25',
  $x64             =  true,
  $downloadDir     =  '/install',
  $urandomJavaFix  =  true,
  $sourcePath      = "puppet:///modules/${::module_path}/",
) {

  # notify's create reports that indicate a change event, useful for debugging, but not good in production code
  # notify {"install7.pp ${title} ${version}":}

  if $x64 == true {
    $type = 'x64'
  } else {
    $type = 'i586'
  }

  case $::kernel {
    Linux: {
      $installVersion   = 'linux'
      $installExtension = '.tar.gz'
      $path             = '/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin:'
      $user             = 'root'
      $group            = 'root'
    }
    default: {
      fail('Unrecognized operating system')
      }
  }

  $jdkfile =  "jdk-${version}-${installVersion}-${type}${installExtension}"

  File {
    replace => false,
    owner   => $user,
    group   => $group,
  }

  file { $downloadDir:
    ensure => directory,
  }

  # download jdk to client
  file {"${downloadDir}/${jdkfile}":
    ensure  => file,
    path    => "${downloadDir}/${jdkfile}",
    source  => "${sourcePath}/${jdkfile}",
    require => File[$downloadDir],
  }
  # install on client
  javaexec {"jdkexec ${title} ${version}":
    path        => $downloadDir,
    fullVersion => $fullVersion,
    jdkfile     => $jdkfile,
    user        => $user,
    group       => $group,
    require     => File["${downloadDir}/${jdkfile}"],
  }

  if ( $urandomJavaFix  ==  true ) {
    exec { "set urandom ${fullVersion}":
    command => "sed -i -e's/securerandom.source=file:\/dev\/urandom/securerandom.source=file:\/dev\/.\/urandom/g' /usr/java/${fullVersion}/jre/lib/security/java.security",
    unless  => "/bin/grep '^securerandom.source=file:/dev/./urandom' /usr/java/${fullVersion}/jre/lib/security/java.security",
    require => Javaexec["jdkexec ${title} ${version}"],
    user    => 'root',
    path    => $path,
    }
  }
}
